package com.example.accessingdatamysql;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private SumaRepository sumaRepository;
  
  Logger logger = LoggerFactory.getLogger(MainController.class);
  
  @PostMapping(path="/suma") // Map ONLY POST Requests
  public @ResponseBody String addNewSuma (@RequestParam Integer num1
      , @RequestParam Integer num2) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Suma s = new Suma();
    s.setNum1(num1);
    logger.info("Se recibieron parametros num1 ");
    s.setNum2(num2);
    logger.info("Se recibieron parametros num2 ");
    s.setNum1masnum2( new Operaciones().suma(num1, num2) );
    logger.info("Se realizo operacion num1 + num2 ");
    sumaRepository.save(s);
    logger.info("Se guardaron resultados en bds... ");
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Suma> getAllSumas() {
    // This returns a JSON or XML with the users
    return sumaRepository.findAll();
  }
  
  
}